esphome:
  name: sdspi_test
  platform: ESP32
  board: esp32dev

external_components:
  - source: local
    path: components

logger:

wifi:
  ssid: "YOUR_SSID"
  password: "YOUR_PASS"

# If needed, enable IDF-style framework or ensure you're not forcing arduino
# esphome:
#   platformio_options:
#     framework: idf

sdspi_card:
  id: my_sd
  cs_pin: GPIO5
  sclk_pin: GPIO18
  mosi_pin: GPIO23
  miso_pin: GPIO19

# You can then use lambdas etc to call list_root, etc
# Example using on_boot
time:
  - platform: sntp
    id: my_time

sd_spi_card:
  spi_freq: 15000
  cs_pin: GPIO5
  clk_pin: GPIO18
  mosi_pin: GPIO23
  miso_pin: GPIO19


sensor:
  # Total space on card
  - platform: sd_spi_card
    type: total_space
    name: "SD Total Space"

  # Used space
  - platform: sd_spi_card
    type: used_space
    name: "SD Used Space"

  # Free space
  - platform: sd_spi_card
    type: free_space
    name: "SD Free Space"

  - platform: sd_spi_card
    type: file_size
    name: "text.txt size"
    path: "/test.txt"



interval:
  - interval: 2s
    then:
      - lambda: |-
          static int counter = 0;
          auto ts = id(sntp_time).now().strftime("%FT%H-%M-%S");
          std::string line = std::string(ts) + "," + std::to_string(counter++) + "\n";
          std::vector<uint8_t> data(line.begin(), line.end());
          id(sd_spi).append_line("/log.csv", line);
      - logger.log: "Added CSV row to log.csv"
